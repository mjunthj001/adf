{
	"name": "DataMap",
	"properties": {
		"activities": [
			{
				"name": "Dynamicmapping",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "contact"
					},
					{
						"name": "Destination",
						"value": "dbo.new_contact"
					}
				],
				"typeProperties": {
					"source": {
						"type": "DynamicsCrmSource"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"value": "@json(activity('Lookup1').output.firstRow.json_output)",
						"type": "Expression"
					}
				},
				"inputs": [
					{
						"referenceName": "LSPRBSrc",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DynamicTable",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_getColumnMapping]",
						"storedProcedureParameters": {
							"schema_name": {
								"type": "String",
								"value": "dbo"
							},
							"table_name": {
								"type": "String",
								"value": "contact"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DynamicTable",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2022-08-04T11:31:53Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}